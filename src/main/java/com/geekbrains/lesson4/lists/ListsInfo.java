package com.geekbrains.lesson4.lists;
/*
 * коллекции могут работать только с ссылочными данными т.к. используют дженерики (generics).
 
 * при вставке (add) элемента в список элементы сдвигаются условно вправо по списку.
 
 * при замене (set) элемента в списке текущий элемент замещается новым.
 
 * емкость (capacity) списка по умолчанию равна 10. При переполнении увеличивается в полтора раза.
 
 * внутри ArrayList зашит обычный массив, при переполнении список создает новый массив 1.5X, переписывает в него значения из переполненного
          и обновляет ссылку.
          
 * метод ensureCapacity() позволяет за один раз увеличить емкость при переполнении базовой до переданного в метод значения.     
  
 * лист может автоматически увеличивать capacity, но не может автоматически уменьшать.
   		нужно использовать trimToSize() для "обрезания" неиспользуемой вместимости.
   		
 * при удалении remove() элемента все оставшиеся сдвигаются влево.
       будет удалено первое вхождение элемента в коллекцию.
 
 * sort() сортирует только объекты классов, поддерживающиъх интерфейс Comparable
 
 * использование внешнего компаратора позволяет переопределить правила сравнения, которые "зашиты" в классе по умолчанию.
  		в том числе можно сравнивать классы, не реализующие интерфейс Comparable.
  		
 * LinkedList всегда имеет ссылки на края (первый и последний элемент), поэтому скорость работы с добавлением/удалением эл-тов
    	с начала/с конца листа всегда одинаковая. 
    	
 * в LinkedList вставка и удаление элементов происходят быстрее, чем в ArrayList (особенно для больших коллекций).
 
 * в ArrayList поиск элемента происходит быстрее, чем в LinkedList (особенно для больших коллекций). 
 
 * если есть большой набор данных и надо часто к ним обращаться по индексу или добавлять элементы в конец - используй ArrayList.
      	 	
 * если нужно работать с данными с одинаковой скоростью с левого и с правого конца списка - используй LinkedList.
  		как правило используется в специфических задачах.
  		
 * Vector - синхронизированный аналог ArrayList. 		
 
       	
 */

public class ListsInfo {	
	
}
